'''
This is mainly a testing grounds for new ideas I think
'''

'''

Author: Patrick V. Holec
Date: 1/4/2017
Primary Results User: Patrick V. Holec

Intended use: reanalyze data in Birnbaum 2014 for potential use in machine-learning project

This workflow combines three extension that complete three fundamental tasks:

    __expansion: expands sequence data obtained in Birnbaum et al. 2014. into
                 pseudo-NGS data so it can be reinterpreted by ScaffoldSeq
    __sequencer: an overseer that operates its own addon (__scaffoldseq), which
                 is effectively an upgraded for of the Woldring, Holec et al. 2016.
    __compiler:  a package that will take all results generated by __sequencer runs
                 sharing an input prefix and put them into one clear, usable format
                 within the "results" folder

If data does not need to be expanded, the __expansion function can be dropped from the workflow

'''

# Standard libraries
import time

# Non-standard libaries
import __expansion
import __sequencer
import __compiler

ScaffoldSeq = __sequencer.main()
ScaffoldSeq.dampening_power = 1
ScaffoldSeq.similarity = 1
ScaffoldSeq.sample_count = 100001
ScaffoldSeq.filter_coeff = 1
ScaffoldSeq.region_length = 13
ScaffoldSeq.indices = [0,1,2,3,4]
ScaffoldSeq.anchor5 = 'ATATATATATATATATAT'
ScaffoldSeq.anchor3 = 'TATATATATATATATATA'
ScaffoldSeq.gstart = 'CGCGCGCGCGCGCGCGCG'
ScaffoldSeq.gend = 'GCGCGCGCGCGCGCGCGC'
ScaffoldSeq.data_fnames = ['2b4_r0.fasta','2b4_r1.fasta','2b4_r2.fasta',
                    '2b4_r3.fasta','2b4_r4.fasta']
'''
Things you might want to do to the sequencer:

ScaffoldSeq.sample_count = <integer>     set to 1 mil as default
ScaffoldSeq.dampening_power = <float>    <= 1, dampens dominant clones
ScaffoldSeq.similarity = <float>         <= 1, clustering threshold
ScaffoldSeq.filter_coeff = <integer>     # sequences needed to not be noise

'''

all_names = ['2b4']

# These sequences have *14* positions rather than *13*


for s in all_names:
    #__expansion.main(s + '_uniques')
    ScaffoldSeq.auto(s)

__compiler.main(all_names)